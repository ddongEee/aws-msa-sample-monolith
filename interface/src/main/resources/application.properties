###########################
### KAFKA
###########################

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# by default, acks=all && error retry enabled
spring.kafka.producer.acks=all
spring.kafka.producer.retries=1
spring.kafka.producer.properties.retry.backoff.ms=100
# by default, error retry restricted by timeout
spring.kafka.producer.properties.delivery.timeout.ms=120000
# to enable transaction (requires acks = all && sets enable.idempotence = true)
spring.kafka.producer.transaction-id-prefix=aws-msa-sample-monolith-tx-${random.int}-

spring.kafka.consumer.group-id=aws-msa-sample-monolith
spring.kafka.consumer.auto-offset-reset=latest
# gracefully handle message parsing error with ErrorHandlingDeserializer
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.aws.peach.domain.*
spring.kafka.consumer.enable-auto-commit=false
## how long to wait to read transactional messages until the associated transaction has been committed
spring.kafka.consumer.isolation-level=read_committed

kafka.topic.order-state-change=order_state_change
kafka.topic.delivery-change=delivery_change

###########################
### JPA
###########################

spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.master.jdbc-url=jdbc:postgresql://localhost:15432/postgres

spring.datasource.master.username=postgres
spring.datasource.master.password=postgres1234
spring.datasource.master.connectionTimeout=30000
spring.datasource.master.maximumPoolSize=1
spring.datasource.master.maxLifetime=1800000
spring.datasource.master.poolName=HikariCP-master
spring.datasource.master.connectionTestQuery=SELECT 1

spring.datasource.slave.jdbc-url=jdbc:postgresql://localhost:15432/postgres
spring.datasource.slave.username=postgres
spring.datasource.slave.password=postgres1234
spring.datasource.slave.connectionTimeout=30000
spring.datasource.slave.maximumPoolSize=1
spring.datasource.slave.maxLifetime=1800000
spring.datasource.slave.poolName=HikariCP-slave
spring.datasource.slave.connectionTestQuery=SELECT 1

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.show-sql = false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.show-sql=false

# for local database only !!!!
spring.jpa.database=postgresql
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.defer-datasource-initialization=true
spring.sql.init.platform=postgresql
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8

# logging levels
logging.level.org.springframework.transaction=trace
logging.level.org.springframework.kafka.transaction=debug
logging.level.org.springframework.kafka.core=trace
logging.level.org.hibernate.SQL=DEBUG