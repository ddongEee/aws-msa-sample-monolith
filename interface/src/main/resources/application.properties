spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# by default, acks=all && error retry enabled
spring.kafka.producer.acks=1
spring.kafka.producer.retries=1
spring.kafka.producer.properties.retry.backoff.ms=100
# by default, error retry restricted by timeout
spring.kafka.producer.properties.delivery.timeout.ms=120000

spring.kafka.consumer.group-id=aws-msa-sample-monolith
spring.kafka.consumer.auto-offset-reset=latest
# gracefully handle message parsing error with ErrorHandlingDeserializer
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.aws.peach.domain.*

kafka.topic.order-state-change=order_state_change
kafka.topic.delivery-event=delivery.status.change
